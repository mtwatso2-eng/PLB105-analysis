cor(testPheno, fit$u[100:119]) ^ 2
testPheno
ipheno <- pheno
igeno <- geno
ipheno <- data.frame(id = ipheno$X, pheno = ipheno$production)
rownames(igeno) <- igeno[,1]
igeno <- igeno[,-1]
igeno <- as.matrix(igeno)
require(rrBLUP)
testPheno <- ipheno[100:119,"pheno"]
ipheno[100:119,"pheno"] <- NA
ipheno[1:99,"pheno"] <- sample(ipheno[1:99,"pheno"])
ipheno
GRM <- A.mat(igeno)
fit <- mixed.solve(y = ipheno$pheno, K = GRM)
cor(testPheno, fit$u[100:119]) ^ 2
testPheno <- ipheno[100:119,"pheno"]
ipheno[100:119,"pheno"] <- NA
ipheno[1:99,"pheno"] <- sample(ipheno[1:99,"pheno"])
GRM <- A.mat(igeno)
fit <- mixed.solve(y = ipheno$pheno, K = GRM)
cor(testPheno, fit$u[100:119]) ^ 2
ipheno <- pheno
igeno <- geno
ipheno <- data.frame(id = ipheno$X, pheno = ipheno$production)
rownames(igeno) <- igeno[,1]
igeno <- igeno[,-1]
igeno <- as.matrix(igeno)
require(rrBLUP)
testPheno <- ipheno[100:119,"pheno"]
ipheno[100:119,"pheno"] <- NA
ipheno[1:99,"pheno"] <- sample(ipheno[1:99,"pheno"])
GRM <- A.mat(igeno)
fit <- mixed.solve(y = ipheno$pheno, K = GRM)
cor(testPheno, fit$u[100:119]) ^ 2
ipheno <- pheno
igeno <- geno
ipheno <- data.frame(id = ipheno$X, pheno = ipheno$production)
rownames(igeno) <- igeno[,1]
igeno <- igeno[,-1]
igeno <- as.matrix(igeno)
require(rrBLUP)
testPheno <- ipheno[100:119,"pheno"]
ipheno[100:119,"pheno"] <- NA
ipheno[1:99,"pheno"] <- sample(ipheno[1:99,"pheno"])
GRM <- A.mat(igeno)
fit <- mixed.solve(y = ipheno$pheno, K = GRM)
cor(testPheno, fit$u[100:119]) ^ 2
ipheno <- pheno
igeno <- geno
ipheno <- data.frame(id = ipheno$X, pheno = ipheno$production)
rownames(igeno) <- igeno[,1]
igeno <- igeno[,-1]
igeno <- as.matrix(igeno)
require(rrBLUP)
testPheno <- ipheno[100:119,"pheno"]
ipheno[100:119,"pheno"] <- NA
ipheno[1:99,"pheno"] <- sample(ipheno[1:99,"pheno"])
GRM <- A.mat(igeno)
fit <- mixed.solve(y = ipheno$pheno, K = GRM)
cor(testPheno, fit$u[100:119]) ^ 2
ipheno <- pheno
igeno <- geno
ipheno <- data.frame(id = ipheno$X, pheno = ipheno$production)
rownames(igeno) <- igeno[,1]
igeno <- igeno[,-1]
igeno <- as.matrix(igeno)
require(rrBLUP)
testPheno <- ipheno[100:119,"pheno"]
ipheno[100:119,"pheno"] <- NA
ipheno[1:99,"pheno"] <- sample(ipheno[1:99,"pheno"])
GRM <- A.mat(igeno)
fit <- mixed.solve(y = ipheno$pheno, K = GRM)
cor(testPheno, fit$u[100:119]) ^ 2
ipheno <- pheno
igeno <- geno
ipheno <- data.frame(id = ipheno$X, pheno = ipheno$production)
rownames(igeno) <- igeno[,1]
igeno <- igeno[,-1]
igeno <- as.matrix(igeno)
require(rrBLUP)
testPheno <- ipheno[100:119,"pheno"]
ipheno[100:119,"pheno"] <- NA
GRM <- A.mat(igeno)
fit <- mixed.solve(y = ipheno$pheno, K = GRM)
cor(testPheno, fit$u[100:119]) ^ 2
ipheno <- pheno
igeno <- geno
ipheno <- data.frame(id = ipheno$X, pheno = ipheno$production)
rownames(igeno) <- igeno[,1]
igeno <- igeno[,-1]
igeno <- as.matrix(igeno)
require(rrBLUP)
testPheno <- ipheno[100:119,"pheno"]
ipheno[100:119,"pheno"] <- NA
GRM <- A.mat(igeno)
fit <- mixed.solve(y = ipheno$pheno, K = GRM)
cor(testPheno, fit$u[100:119]) ^ 2
ipheno <- pheno
igeno <- geno
ipheno <- data.frame(id = ipheno$X, pheno = ipheno$production)
rownames(igeno) <- igeno[,1]
igeno <- igeno[,-1]
igeno <- as.matrix(igeno)
require(rrBLUP)
testPheno <- ipheno[100:119,"pheno"]
ipheno[100:119,"pheno"] <- NA
ipheno[1:99,"pheno"] <- sample(ipheno[1:99,"pheno"])
GRM <- A.mat(igeno)
fit <- mixed.solve(y = ipheno$pheno, K = GRM)
cor(testPheno, fit$u[100:119]) ^ 2
ipheno <- pheno
igeno <- geno
ipheno <- data.frame(id = ipheno$X, pheno = ipheno$production)
rownames(igeno) <- igeno[,1]
igeno <- igeno[,-1]
igeno <- as.matrix(igeno)
require(rrBLUP)
testPheno <- ipheno[100:119,"pheno"]
ipheno[100:119,"pheno"] <- NA
ipheno[1:99,"pheno"] <- sample(ipheno[1:99,"pheno"])
GRM <- A.mat(igeno)
fit <- mixed.solve(y = ipheno$pheno, K = GRM)
cor(testPheno, fit$u[100:119]) ^ 2
shiny::runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
shinyApp(ui = ui, server = server)
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
rm(list=ls())
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
names(metadata)
metadata$Download_Instructions
metadata$Sharing_Link
metadata$Download_Instructions
metadata$Sharing_Link
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
metadata
names(https://zenodo.org/records/7018179/files/wyy2017/Foxtail-millet-data-analysis-V1.zip?download=1)
names(metadata)
runApp('temp.R')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
metadata
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
?columnDefs
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
runApp('~/Library/CloudStorage/Box-Box/Projects/G2PDatasets/G2PDatasets app')
source("~/Desktop/test.R")
data
source("~/Desktop/test.R")
source("~/Desktop/test.R")
?rep
source("~/Desktop/test.R")
predicted
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
predicted
source("~/Desktop/test.R")
predicted
source("~/Desktop/test.R")
source("~/Desktop/test.R")
predicted
source("~/Desktop/test.R")
source("~/Desktop/test.R")
known <- tapply(known, individual, mean)
known
source("~/Desktop/test.R")
known
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
?rnorm
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
shiny::runApp('Downloads/G2P-Datasets-App-main')
runApp('Downloads/G2P-Datasets-App-main')
?pandoc_convert
runApp('Downloads/G2P-Datasets-App-main')
runApp('Downloads/G2P-Datasets-App-main')
metadata <<- datasetDir %>%
list.files(full.names = TRUE, recursive = TRUE) %>%
{.[map_lgl(., function(x){grepl("meta_data.json", x)})]} %>%
map(., function(x){jsonlite::fromJSON(x)}) %>%
map(., as.data.frame) %>%
map(., function(x){x %>% mutate(across(everything(), as.character))}) %>%
bind_rows()
metadata
rm(list=ls())
metadata
runApp('Downloads/G2P-Datasets-App-main')
metadata
test <- datasetDir %>%
list.files(full.names = TRUE, recursive = TRUE) %>%
{.[map_lgl(., function(x){grepl("meta_data.json", x)})]} %>%
map(., function(x){jsonlite::fromJSON(x)}) %>%
map(., as.data.frame) %>%
map(., function(x){x %>% mutate(across(everything(), as.character))}) %>%
bind_rows()
test
metadat <- datasetDir %>%
list.files(full.names = TRUE, recursive = TRUE) %>%
{.[map_lgl(., function(x){grepl("meta_data.json", x)})]} %>%
map(., function(x){jsonlite::fromJSON(x)}) %>%
map(., as.data.frame) %>%
map(., function(x){x %>% mutate(across(everything(), as.character))}) %>%
bind_rows()
metadat
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
which(mostUncorrelatedFeatures==max(mostUncorrelatedFeatures), arr.ind=T)
mostUncorrelatedFeatures
source("~/Desktop/test.R")
mostUncorrelatedFeatures
which(mostUncorrelatedFeatures==max(mostUncorrelatedFeatures), arr.ind=T)
which(mostUncorrelatedFeatures==min_rank(mostUncorrelatedFeatures), arr.ind=T)
which(mostUncorrelatedFeatures==min(mostUncorrelatedFeatures), arr.ind=T)
source("~/Desktop/test.R")
source("~/Desktop/test.R")
which(mostUncorrelatedFeatures==min(mostUncorrelatedFeatures), arr.ind=T)
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
iris %>% cor
cor(iris[!Species])
cor(iris[!"Species"])
cor(iris[-"Species"])
require(tidyverse)
iris %>% select(where(is.numeric)) %>% cor
require(tidyverse)
iris %>% cor
iris %>% select(where(is.numeric)) %>% cor
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
pa
pa[1]
sort(pa)
source("~/.active-rstudio-document")
shiny::runApp('Desktop')
require(gargle)
?drive_auth
drive_auth(".secrets/")
?drive_auth
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
source("~/Desktop/test.R")
predicted
source("~/Desktop/test.R")
df
observations
shiny::runApp('Library/CloudStorage/Box-Box/Courses/Project analysis app')
runApp('Library/CloudStorage/Box-Box/Courses/Project analysis app')
data
runApp('Library/CloudStorage/Box-Box/Courses/Project analysis app')
runApp('Library/CloudStorage/Box-Box/Courses/Project analysis app')
runApp('Library/CloudStorage/Box-Box/Courses/Project analysis app')
df
observations
runApp('Library/CloudStorage/Box-Box/Courses/Project analysis app')
runApp('Library/CloudStorage/Box-Box/Courses/Project analysis app')
observations
runApp('Library/CloudStorage/Box-Box/Courses/Project analysis app')
runApp('Library/CloudStorage/Box-Box/Courses/Project analysis app')
runApp('Library/CloudStorage/Box-Box/Courses/Project analysis app')
stderr(c(0.799,0.797,0.79,0.774))
stderr(c(0.799,0.797,0.79,0.774))
stderr(c(0.799,0.797,0.79,0.774), c(1,1,1,1))
?stderr
standardError <- function(x){sd(x) / sqrt(length(x))}
standardError(c(0.799,0.797,0.79,0.774))
standardError(c(0.713,0.772,0.757,0.775))
standardError(c(0.838,0.862,0.864,0.866))
standardError(c(0.667,0.721,0.712,0.735))
standardError(c(0.834,0.869,0.857,0.863))
shiny::runApp('Library/CloudStorage/Box-Box/Courses/PLB 105/Project analysis app')
"class data.csv" %>%
read_csv() %>%
rename_with(str_to_sentence) %>%
mutate(
Class = case_when(
Class == "H" ~ "Hyphae",
Class == "A" ~ "Arbuscules",
Class == "V" ~ "Vesicles"
)
) %>%
rowwise() %>%
mutate(
Value = min(c(Value * 10 / Total_windows, 10)),
Group = last(str_split(Group, "-")[[1]]),
) %>%
ungroup()
setwd("/Users/mtwatson/Library/CloudStorage/Box-Box/Courses/PLB 105/Project analysis app/class data.csv")
setwd("/Users/mtwatson/Library/CloudStorage/Box-Box/Courses/PLB 105/Project analysis app")
"class data.csv" %>%
read_csv() %>%
rename_with(str_to_sentence) %>%
mutate(
Class = case_when(
Class == "H" ~ "Hyphae",
Class == "A" ~ "Arbuscules",
Class == "V" ~ "Vesicles"
)
) %>%
rowwise() %>%
mutate(
Value = min(c(Value * 10 / Total_windows, 10)),
Group = last(str_split(Group, "-")[[1]]),
) %>%
ungroup()
runApp()
runApp()
observations %>%
filter(Group %in% input$group) %>%
{str_sort(unique(.[[input$plotFactor]]), numeric = T)}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
?pickerInput
runApp()
runApp()
runApp()
runApp()
runApp()
?pickerOptions
